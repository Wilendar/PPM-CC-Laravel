{
  "hooks": {
    "SessionStart": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "pwsh -NoProfile -ExecutionPolicy Bypass -File \".claude\\scripts\\session-reminder.ps1\""
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "(Write|Edit|MultiEdit).*\\.php",
        "hooks": [
          {
            "type": "command",
            "command": "pwsh -Command \"Write-Host '‚ö†Ô∏è PHP/LARAVEL CODE DETECTED' -ForegroundColor Red; Write-Host 'üìö MANDATORY: Use Context7 for Laravel 12.x documentation' -ForegroundColor Yellow; Write-Host '‚Ä¢ Step 1: mcp__context7__resolve-library-id Laravel' -ForegroundColor White; Write-Host '‚Ä¢ Step 2: mcp__context7__get-library-docs /websites/laravel_12_x' -ForegroundColor White; Write-Host '‚Ä¢ Remember: PSR-12, enterprise patterns, no hardcoding' -ForegroundColor Gray\""
          }
        ]
      },
      {
        "matcher": "(Write|Edit|MultiEdit).*\\.blade\\.php",
        "hooks": [
          {
            "type": "command",
            "command": "pwsh -Command \"Write-Host '‚ö° LIVEWIRE COMPONENT DETECTED' -ForegroundColor Cyan; Write-Host 'üìö MANDATORY: Use Context7 for Livewire 3.x patterns' -ForegroundColor Yellow; Write-Host '‚Ä¢ Library: /livewire/livewire' -ForegroundColor White; Write-Host '‚Ä¢ Use dispatch() NOT emit()' -ForegroundColor Red; Write-Host '‚Ä¢ Add wire:key in loops' -ForegroundColor Red; Write-Host '‚Ä¢ Avoid z-index in components' -ForegroundColor Red\""
          }
        ]
      },
      {
        "matcher": "(Write|Edit|MultiEdit).*\\.(js|ts)$",
        "hooks": [
          {
            "type": "command",
            "command": "pwsh -Command \"Write-Host 'üü® JAVASCRIPT/ALPINE.JS DETECTED' -ForegroundColor Yellow; Write-Host 'üìö Consider Context7: /alpinejs/alpine for patterns' -ForegroundColor White; Write-Host '‚Ä¢ Enterprise JS patterns required' -ForegroundColor Gray\""
          }
        ]
      },
      {
        "matcher": "Task",
        "hooks": [
          {
            "type": "command",
            "command": "pwsh -Command \"Write-Host 'ü§ñ AGENT DELEGATION DETECTED' -ForegroundColor Green; Write-Host 'üìö Check: _DOCS/AGENT_USAGE_GUIDE.md' -ForegroundColor Yellow; Write-Host '‚Ä¢ Agent MUST use Context7 before implementation' -ForegroundColor White; Write-Host '‚Ä¢ Agent MUST create report in _AGENT_REPORTS/' -ForegroundColor White; Write-Host '‚Ä¢ Only ONE agent in_progress at a time' -ForegroundColor Red\""
          }
        ]
      },
      {
        "matcher": "mcp__context7__.*",
        "hooks": [
          {
            "type": "command",
            "command": "pwsh -Command \"Write-Host 'üìö CONTEXT7 MCP USAGE - EXCELLENT!' -ForegroundColor Green; Write-Host '‚Ä¢ Following proper enterprise workflow' -ForegroundColor White\""
          }
        ]
      },
      {
        "matcher": "Bash.*ssh|Bash.*pscp|Bash.*plink",
        "hooks": [
          {
            "type": "command",
            "command": "pwsh -Command \"Write-Host 'üöÄ DEPLOYMENT COMMAND DETECTED' -ForegroundColor Magenta; Write-Host '‚Ä¢ Target: ppm.mpptrade.pl' -ForegroundColor White; Write-Host '‚Ä¢ SSH Key: HostidoSSHNoPass.ppk' -ForegroundColor White; Write-Host '‚Ä¢ Remember: cache clear after deployment' -ForegroundColor Yellow\""
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "(Write|Edit|MultiEdit).*\\.php",
        "hooks": [
          {
            "type": "command",
            "command": "pwsh -Command \"Write-Host '‚úÖ PHP CODE MODIFIED' -ForegroundColor Green; Write-Host 'üîß Recommended next steps:' -ForegroundColor Yellow; Write-Host '‚Ä¢ php artisan test (if tests exist)' -ForegroundColor White; Write-Host '‚Ä¢ Consider coding-style-agent review' -ForegroundColor White; Write-Host '‚Ä¢ Check PSR-12 compliance' -ForegroundColor White\""
          }
        ]
      },
      {
        "matcher": "(Write|Edit|MultiEdit).*\\.blade\\.php",
        "hooks": [
          {
            "type": "command",
            "command": "pwsh -Command \"Write-Host '‚úÖ LIVEWIRE COMPONENT MODIFIED' -ForegroundColor Green; Write-Host 'üîç Verify:' -ForegroundColor Yellow; Write-Host '‚Ä¢ wire:key present in @foreach loops' -ForegroundColor White; Write-Host '‚Ä¢ dispatch() used instead of emit()' -ForegroundColor White; Write-Host '‚Ä¢ No hardcoded z-index values' -ForegroundColor White\""
          }
        ]
      },
      {
        "matcher": "Bash.*composer.*install",
        "hooks": [
          {
            "type": "command",
            "command": "pwsh -Command \"Write-Host 'üì¶ COMPOSER INSTALL COMPLETED' -ForegroundColor Green; Write-Host '‚Ä¢ Consider running: php artisan migrate' -ForegroundColor Yellow; Write-Host '‚Ä¢ Consider running: php artisan cache:clear' -ForegroundColor Yellow\""
          }
        ]
      },
      {
        "matcher": "Bash.*artisan.*migrate",
        "hooks": [
          {
            "type": "command",
            "command": "pwsh -Command \"Write-Host 'üóÑÔ∏è DATABASE MIGRATION COMPLETED' -ForegroundColor Green; Write-Host '‚Ä¢ Consider seeding: php artisan db:seed' -ForegroundColor Yellow; Write-Host '‚Ä¢ Verify on production if needed' -ForegroundColor White\""
          }
        ]
      },
      {
        "matcher": "Task",
        "hooks": [
          {
            "type": "command",
            "command": "pwsh -Command \"Write-Host 'üèÅ AGENT TASK COMPLETED' -ForegroundColor Green; Write-Host 'üîç Agent Validation:' -ForegroundColor Yellow; Write-Host '‚Ä¢ Check report in _AGENT_REPORTS/' -ForegroundColor White; Write-Host '‚Ä¢ Verify Context7 was used' -ForegroundColor White; Write-Host '‚Ä¢ Consider coding-style-agent review' -ForegroundColor White\""
          }
        ]
      },
      {
        "matcher": "Bash.*(pscp|plink).*hostido",
        "hooks": [
          {
            "type": "command",
            "command": "pwsh -Command \"Write-Host 'üöÄ DEPLOYMENT TO HOSTIDO COMPLETED' -ForegroundColor Green; Write-Host 'üîß Post-deployment checklist:' -ForegroundColor Yellow; Write-Host '‚Ä¢ php artisan cache:clear' -ForegroundColor White; Write-Host '‚Ä¢ php artisan view:clear' -ForegroundColor White; Write-Host '‚Ä¢ Test on https://ppm.mpptrade.pl' -ForegroundColor White\""
          }
        ]
      }
    ],
    "PreCompact": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "pwsh -Command \"Write-Host 'üì¶ CONTEXT COMPACTION STARTING' -ForegroundColor Cyan; Write-Host ('=' * 50) -ForegroundColor Cyan; Write-Host 'üìö PRESERVE THESE RULES:' -ForegroundColor Red; Write-Host '‚Ä¢ Context7 MANDATORY for code generation' -ForegroundColor White; Write-Host '‚Ä¢ NO HARDCODING - enterprise configurable patterns' -ForegroundColor White; Write-Host '‚Ä¢ NO MOCK DATA - create real structures' -ForegroundColor White; Write-Host '‚Ä¢ Agents MUST use Context7 & create reports' -ForegroundColor White; Write-Host '‚Ä¢ Current: ETAP_08 ERP Integration' -ForegroundColor White; Write-Host '‚Ä¢ Check Plan_Projektu/ for status' -ForegroundColor White; Write-Host ('=' * 50) -ForegroundColor Cyan\""
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "pwsh -NoProfile -ExecutionPolicy Bypass -File \".claude\\scripts\\analyze-prompt.ps1\""
          }
        ]
      }
    ],
    "SubagentStop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "pwsh -Command \"Write-Host 'üèÅ SUBAGENT COMPLETED WORK' -ForegroundColor Green; Write-Host 'üîç Compliance Check Required:' -ForegroundColor Yellow; Write-Host '‚Ä¢ Report should be in _AGENT_REPORTS/' -ForegroundColor White; Write-Host '‚Ä¢ Context7 usage should be documented' -ForegroundColor White; Write-Host '‚Ä¢ Next: Consider coding-style-agent review' -ForegroundColor White\""
          }
        ]
      }
    ],
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "pwsh -Command \"Write-Host 'üèÅ SESSION ENDING' -ForegroundColor Cyan; Write-Host 'üìä Session Summary:' -ForegroundColor Yellow; Write-Host '‚Ä¢ Check _AGENT_REPORTS/ for new reports' -ForegroundColor White; Write-Host '‚Ä¢ Verify Context7 usage in this session' -ForegroundColor White; Write-Host '‚Ä¢ Update Plan_Projektu/ if needed' -ForegroundColor White; Write-Host '‚Ä¢ Consider git commit if work completed' -ForegroundColor Gray\""
          },
          {
            "type": "command",
            "command": "pwsh -NoProfile -ExecutionPolicy Bypass -File \".claude\\scripts\\check-agent-compliance.ps1\""
          }
        ]
      }
    ],
    "Notification": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "pwsh -Command \"Write-Host 'üîî CLAUDE CODE NOTIFICATION' -ForegroundColor Yellow; Write-Host '‚Ä¢ Remember: Context7 mandatory for code generation' -ForegroundColor White; Write-Host '‚Ä¢ Check CLAUDE.md for current project rules' -ForegroundColor White\""
          }
        ]
      }
    ]
  }
}